#!/bin/bash

# Script d'installation enhanced pour OpiozenMusic
echo "üöÄ Installation Enhanced d'OpiozenMusic Bot..."

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction d'affichage color√©
print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è $1${NC}"
}

# Mise √† jour du syst√®me
print_info "Mise √† jour du syst√®me..."
sudo apt update && sudo apt upgrade -y

# Installation des d√©pendances syst√®me de base
print_info "Installation des d√©pendances syst√®me..."
sudo apt install -y \
    python3 \
    python3-pip \
    python3-venv \
    python3-dev \
    ffmpeg \
    libffi-dev \
    libnacl-dev \
    libssl-dev \
    libxml2-dev \
    libxslt1-dev \
    zlib1g-dev \
    libjpeg-dev \
    build-essential \
    git \
    curl \
    wget

# Installation de d√©pendances suppl√©mentaires pour le contournement
print_info "Installation des d√©pendances de contournement..."
sudo apt install -y \
    chromium-browser \
    chromium-chromedriver \
    firefox-esr \
    tor \
    proxychains4

# Configuration de Tor (optionnel pour les proxies)
print_info "Configuration de Tor..."
sudo systemctl enable tor
sudo systemctl start tor

# Cr√©ation de l'environnement virtuel
print_info "Cr√©ation de l'environnement virtuel..."
if [ -d "venv" ]; then
    rm -rf venv
fi
python3 -m venv venv

# Activation de l'environnement virtuel
print_info "Activation de l'environnement virtuel..."
source venv/bin/activate

# Mise √† jour de pip
print_info "Mise √† jour de pip..."
pip install --upgrade pip setuptools wheel

# Installation des d√©pendances Python de base
print_info "Installation des d√©pendances Python de base..."
pip install discord.py[voice] yt-dlp PyNaCl python-dotenv requests

# Installation des d√©pendances enhanced si disponibles
if [ -f "requirements_enhanced.txt" ]; then
    print_info "Installation des d√©pendances enhanced..."
    pip install -r requirements_enhanced.txt
else
    print_info "Installation des d√©pendances standard..."
    pip install -r requirements.txt
fi

# Installation de d√©pendances suppl√©mentaires pour le contournement
print_info "Installation des d√©pendances de contournement..."
pip install \
    selenium \
    webdriver-manager \
    browser-cookie3 \
    fake-useragent \
    python-socks \
    aiohttp-socks \
    beautifulsoup4 \
    lxml \
    mutagen \
    pycryptodome

# Configuration des cookies YouTube
print_info "Configuration du syst√®me de cookies..."
if [ -f "setup-cookies.sh" ]; then
    chmod +x setup-cookies.sh
    ./setup-cookies.sh
else
    print_warning "Script de cookies non trouv√©, cr√©ation d'un template..."
    touch cookies.txt
fi

# Test de yt-dlp avec contournement
print_info "Test de yt-dlp avec contournement..."
python3 -c "
import yt_dlp
options = {
    'quiet': True,
    'no_warnings': True,
    'format': 'bestaudio/best',
    'extract_flat': True
}
try:
    with yt_dlp.YoutubeDL(options) as ydl:
        info = ydl.extract_info('ytsearch1:test music', download=False)
        print('‚úÖ yt-dlp fonctionne correctement')
except Exception as e:
    print(f'‚ö†Ô∏è yt-dlp: {e}')
"

# Configuration des services syst√®me
print_info "Configuration des services syst√®me..."

# Cr√©er un service de surveillance des cookies
cat > update-cookies.sh << 'EOF'
#!/bin/bash
# Script de mise √† jour automatique des cookies

cd "$(dirname "$0")"

# V√©rifier si les cookies sont anciens (plus de 24h)
if [ -f cookies.txt ]; then
    if [ $(find cookies.txt -mtime +1 | wc -l) -gt 0 ]; then
        echo "üîÑ Mise √† jour des cookies..."
        if [ -f setup-cookies.sh ]; then
            ./setup-cookies.sh
        fi
    fi
fi
EOF

chmod +x update-cookies.sh

# Cr√©er un crontab pour la mise √† jour automatique des cookies
print_info "Configuration de la mise √† jour automatique des cookies..."
(crontab -l 2>/dev/null; echo "0 6 * * * $PWD/update-cookies.sh") | crontab -

# Configuration de la rotation des logs
print_info "Configuration de la rotation des logs..."
sudo tee /etc/logrotate.d/opiozenmusic > /dev/null << EOF
$PWD/logs/*.log {
    daily
    missingok
    rotate 7
    compress
    delaycompress
    notifempty
    copytruncate
}
EOF

# Cr√©ation du r√©pertoire de logs
mkdir -p logs

# Test final
print_info "Tests finaux..."

# Test Discord.py
python3 -c "
try:
    import discord
    print('‚úÖ Discord.py install√© correctement')
except ImportError as e:
    print(f'‚ùå Discord.py: {e}')
"

# Test des imports du bot
python3 -c "
try:
    import requests
    import json
    import random
    print('‚úÖ D√©pendances suppl√©mentaires OK')
except ImportError as e:
    print(f'‚ùå D√©pendances: {e}')
"

# V√©rification FFmpeg
if command -v ffmpeg &> /dev/null; then
    print_status "FFmpeg install√©: $(ffmpeg -version | head -n1)"
else
    print_error "FFmpeg non trouv√©"
fi

# Affichage du r√©sum√©
echo ""
echo "================================================"
echo "     INSTALLATION ENHANCED TERMIN√âE"
echo "================================================"
echo ""
print_status "‚úÖ Syst√®me mis √† jour"
print_status "‚úÖ D√©pendances syst√®me install√©es"
print_status "‚úÖ Environnement virtuel Python cr√©√©"
print_status "‚úÖ D√©pendances Python enhanced install√©es"
print_status "‚úÖ Syst√®me de contournement configur√©"
print_status "‚úÖ Cookies YouTube configur√©s"
print_status "‚úÖ Services syst√®me configur√©s"
print_status "‚úÖ Rotation des logs configur√©e"
print_status "‚úÖ Mise √† jour automatique des cookies configur√©e"
echo ""
echo "üéµ Fonctionnalit√©s Enhanced disponibles:"
echo "   ‚Ä¢ Support multi-sources (YouTube, SoundCloud, Bandcamp)"
echo "   ‚Ä¢ Contournement avanc√© des restrictions YouTube"
echo "   ‚Ä¢ Syst√®me de cookies automatique"
echo "   ‚Ä¢ APIs alternatives (Invidious)"
echo "   ‚Ä¢ Gestion avanc√©e des erreurs"
echo "   ‚Ä¢ Mode shuffle et commandes √©tendues"
echo "   ‚Ä¢ Rotation automatique des User-Agents"
echo "   ‚Ä¢ Support des proxies (optionnel)"
echo ""
echo "üìù Prochaines √©tapes:"
echo "1. Configurez votre token Discord dans le fichier .env"
echo "2. Ex√©cutez: source venv/bin/activate"
echo "3. Lancez le bot enhanced: python3 music_bot_enhanced.py"
echo "4. Ou utilisez le service: ./setup-service.sh && sudo systemctl start opiozenmusic"
echo ""
echo "üîß Commandes utiles:"
echo "   ‚Ä¢ Tester le contournement: python3 advanced_bypass.py"
echo "   ‚Ä¢ Mettre √† jour les cookies: ./update-cookies.sh"
echo "   ‚Ä¢ Voir les logs: tail -f logs/bot.log"
echo ""
print_status "üéâ Votre bot de musique enhanced est pr√™t!"
